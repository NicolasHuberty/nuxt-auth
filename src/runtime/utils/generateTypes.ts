import { genInterface } from 'knitwork'
import { createResolver } from '@nuxt/kit'
import type { AuthProviders } from '../types'

export function generateModuleTypes (provider: AuthProviders) {
  const { resolve } = createResolver(import.meta.url)

  const providerSpecificTypes: string[] = []

  if (provider.type === 'authjs') {
    providerSpecificTypes.push(`  const { getServerSession, getToken, NuxtAuthHandler }: typeof import('${resolve('./runtime/server/services/authjs')}')`)
  }

  if (provider.type === 'local') {
    providerSpecificTypes.push(`  const { getServerSession, getToken }: typeof import('${resolve('./runtime/server/services/local')}')`)
    providerSpecificTypes.push(genInterface('SessionData', (provider as any).session.dataType))
  }

  return [
    '// AUTO-GENERATED BY @sidebase/nuxt-auth',
    `declare module '#auth' {`,
    ...providerSpecificTypes,
    '}',
    ''
  ].join('\n')
}
